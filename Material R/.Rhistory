1+2+5+5+7+10+6+4
1+5+1.5+
2+1+1+2+5
125-97
con_EP<-0.5
con_PE<-2
pm.ret<-150*10
dado<-6*100
risk<-1200*con_PE
sup<-1000*con_PE
valor<-sup+pm.ret+dado+risk
con_EP<-0.5  ## conversión ECU a peso
con_PE<-2   ## Conversión peso a ECU
pm.ret<-150*10 # Prometio ret 10 respuestas correctsd
dado<-6*100 # Más alto del dado
risk<-1200*con_PE ## Preferencias de riesgo medias
sup<-1000*con_PE ## show-up en ECU
valor.ECU<-sup+pm.ret+dado+risk  ##pago en ECU
valor.peso<-valor.ECU*con_EP  ## pago por persona en pesos
valor.peso
11*150 + 3,91*90
3.91*90
session<-valor.peso*80
tot<-session*4
pound<-tot*0.00120372
pound
con_EP<-0.5  ## conversión ECU a peso
con_PE<-2   ## Conversión peso a ECU
pm.ret<-150*10 # Prometio ret 10 respuestas correctsd
dado<-6*100 # Más alto del dado
risk<-1200*con_PE ## Preferencias de riesgo medias
sup<-1000*con_PE ## show-up en ECU
valor.ECU<-sup+pm.ret+dado+risk  ##pago en ECU
valor.peso<-valor.ECU*con_EP  ## pago por persona en pesos
session<-valor.peso*70
tot<-session*4
pound<-tot*0.00120372
pound
13-8
3
5+
13+
2+
5+
2+
17
44-37
x<-2000
y<-2000
5200/(9000-X-Y)
5200/(9000-x-y)
x<-2000
y<-2000
5200/(10000-x-y)
d<-5200/(10000-x-y)
d*500
d<-5000/(10000-x-y)
d*500
d<-4800/(10000-x-y)
d*500
d<-4000/(10000-x-y)
d*500
a<-1000+(150*11+50+50)*2+600*2
a
a<-1000+(150*11+50+50)*2+600
a
a<-1000+(150*11+50+50)*2+600
a
d<-a/(10000-x-y)
d*500
x<-2000
y<-2000
d<-a/(10000-x-y)
d*500
a<-1000+(150*9+50+50)*2+600
a
x<-2000
y<-2000
d<-a/(10000-x-y)
d*500
x<-2000
y<-1000
d<-a/(10000-x-y)
d*500
0.4*1700+0.6*1.300
0.4*1700+0.6*1300
0.4*3400+0.6*50
0.5*3400+0.5*50
0.5*1700+0.5*1300
0.5*3350+0.5*50
0.4*3350+0.6*50
0.4*1700+0.6*1300
??po.graph()
N<-1000
y0<-rnorm(N, 0, 2)
y1<-y0+rnorm(N, 0, 0.5)
N<-500
y0<-rnorm(N, 0, 2)
y1<-y0+rnorm(N, 0, 0.5)
y<-c(y0, y1)
col<-c(rep(0, N), rep(1, N))
hist(y)
N<-500
y0<-rnorm(N, 5, 2)
y1<-y0+rnorm(N, 1, 0.5)
y<-c(y0, y1)
col<-c(rep(0, N), rep(1, N))
hist(y)
u<-1:1000
x<-1:1000
df<-cbind(y,x, col)
View(df)
x<-1:1000
df<-cbind(y,x, col)
View(df)
N<-500
y0<-rnorm(N, 5, 2)
y1<-y0+rnorm(N, 1, 0.5)
y<-c(y0, y1)
col<-c(rep(0, N), rep(1, N))
x<-1:1000
df<-cbind(y,x, col)
View(df)
N<-500
y0<-rnorm(N, 5, 2)
y1<-y0+rnorm(N, 1, 0.5)
y<-c(y0, y1)
col<-c(rep(0, N), rep(1, N))
u<-1:1000
df<-cbind(y,u, col)
View(df)
N<-500
y0<-rnorm(N, 5, 2)
y1<-y0+rnorm(N, 1, 0.5)
y<-c(y0, y1)
col<-c(rep(0, N), rep(1, N))
x<-1:1000
df<-cbind(y,x, col)
View(df)
N<-500
y0<-rnorm(N, 5, 2)
y1<-y0+rnorm(N, 1, 0.5)
y<-c(y0, y1)
col<-c(rep(0, N), rep(1, N))
u-1:1000
df<-cbind(y,u, col)
u<-rep(1:500, 2)
table(u)
df<-cbind(y,u, col)
?ggplot()
library(ggplot2)
ggplot(df, aes(x = u, y = y)) + + geom_point(aes(colour = factor(col)))
ylab("Y(0) & Y(1)") + xlab("u")
ggplot(df, aes(x = u, y = y)) + geom_point(aes(colour = factor(col)))
ylab("Y(0) & Y(1)") + xlab("u")
ggplot() +
geom_point(data=df, mapping=aes(x=u, y=y, shape=a), size=10)
df<-as.data.frame(cbind(y,u, col))
ggplot() +
geom_point(data=df, mapping=aes(x=u, y=y, shape=a), size=10)
ggplot() +
geom_point(data=df, mapping=aes(x=u, y=y, shape=1), size=10)
ggplot() +
geom_point(data=df, mapping=aes(x=u, y=y, col=col), size=10)
ggplot() +
geom_point(data=df, mapping=aes(x=u, y=y, col=col), size=1)
ggplot() +
geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)
theme_set(theme_bw())
ggplot() +
geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u")
ggplot() +
geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_fill_manual("", values=c( "red" , "black" ))
ggplot() +
geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "red" , "black" ))
N<-500
y0<-rnorm(N, 5, 2)
y1<-y0+rnorm(N, 1, 0.5)
y<-c(y0, y1)
col<-c(rep("Y(0)", N), rep("Y(1)", N))
u<-rep(1:500, 2)
df<-as.data.frame(cbind(y,u, col))
ggplot(df, aes(x = u, y = y)) + geom_point(aes(colour = factor(col)))
ylab("Y(0) & Y(1)") + xlab("u")
ggplot() +
geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "red" , "black" ))
ggplot() +
geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "red" , "black" ))
ggplot() + geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "red" , "black" ))
ggplot() + geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "red" , "black" ))
View(df)
View(df)
N<-500
y0<-rnorm(N, 5, 2)
y1<-y0+rnorm(N, 1, 0.5)
y<-c(y0, y1)
col<-c(rep(0, N), rep(1, N))
u<-rep(1:500, 2)
df<-as.data.frame(cbind(y,u, col))
ggplot() + geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "red" , "black" ))
ggplot() + geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "red" , "black" )) + guides(color=FALSE)
N<-500
y0<-rnorm(N, 5, 2)
y1<-y0+rnorm(N, 3, 0.5)
y<-c(y0, y1)
col<-c(rep(0, N), rep(1, N))
u<-rep(1:500, 2)
df<-as.data.frame(cbind(y,u, col))
ggplot() + geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "red" , "black" )) + guides(color=FALSE)
ggplot() + geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "black", "red" )) + guides(color=FALSE)
N<-500
y0<-rnorm(N, 5, 2)
y1<-y0+rnorm(N, 5, 0.5)
y<-c(y0, y1)
col<-c(rep(0, N), rep(1, N))
u<-rep(1:500, 2)
df<-as.data.frame(cbind(y,u, col))
ggplot() + geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "black", "red" )) + guides(color=FALSE)
ggplot() + geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "black", "red" )) + guides(color=FALSE) +
main("Units")
N<-100
y0<-rnorm(N, 5, 2)
y1<-y0+rnorm(N, 5, 0.5)
y<-c(y0, y1)
col<-c(rep(0, N), rep(1, N))
u<-rep(1:N, 2)
df<-as.data.frame(cbind(y,u, col))
ggplot() + geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "black", "red" )) + guides(color=FALSE) +
ggtitle("Y(1) & Y(0) for all units")
N<-200
y0<-rnorm(N, 5, 2)
y1<-y0+rnorm(N, 5, 0.5)
y<-c(y0, y1)
col<-c(rep(0, N), rep(1, N))
u<-rep(1:N, 2)
df<-as.data.frame(cbind(y,u, col))
ggplot() + geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "black", "red" )) + guides(color=FALSE) +
ggtitle("Y(1) & Y(0) for all units")
p1<-ggplot() + geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "black", "red" )) + guides(color=FALSE) +
ggtitle("Y(1) & Y(0) for all units")
p1
p2<-p1+geom_hline(0, data = df)
p2<-p1+geom_hline(yintercept = 0) + geom_hline(yintercept = mean(y1))
p2<-p1+geom_hline(yintercept = 0) + geom_hline(yintercept = mean(y1))
p2
N<-200
y0<-rnorm(N, 0, 1)
y1<-y0+rnorm(N, 5, 0.5)
y<-c(y0, y1)
col<-c(rep(0, N), rep(1, N))
u<-rep(1:N, 2)
df<-as.data.frame(cbind(y,u, col))
p1<-ggplot() + geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "black", "red" )) + guides(color=FALSE) +
ggtitle("Y(1) & Y(0) for all units")
p1
p2<-p1+geom_hline(yintercept = 0) + geom_hline(yintercept = mean(y1))
p2
N<-200
y0<-rnorm(N, 0, 1)
y1<-y0+rnorm(N, 3, 0.5)
y<-c(y0, y1)
col<-c(rep(0, N), rep(1, N))
u<-rep(1:N, 2)
df<-as.data.frame(cbind(y,u, col))
p1<-ggplot() + geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "black", "red" )) + guides(color=FALSE) +
ggtitle("Y(1) & Y(0) for all units")
p1
p2<-p1+geom_hline(yintercept = 0) + geom_hline(yintercept = mean(y1))
p2
library(foreign)
library(ggplot2)
library(readstata13)
library(rms)
theme_set(theme_bw())
library(plyr)
library(stargazer)
library(car)
library(sandwich)
#library(plm)
library(texreg)
rm(list=ls())
setwd("~/GitHub/Winter-School/Material R")
fig.path <- "Figures"
v<-"20Jul2017"
#dat<-read.csv("Masterfile_2016_Dec.csv", sep=";")
dat <- read.csv("cheating_escuela_metodos.csv")
##########################
### Subconjuntos de datos
##########################
dat.2<-dat[dat$auditrate==0, ]
dat.2<-dat.2[dat.2$treatment_lab!="Redistribution",] # Elinimar un tratamiento por pocas observaciones
####  Por país
uk<-subset(dat.2,  country=="UK")
cl<-subset(dat.2,  country=="Chile")
ru<-subset(dat.2,  country=="Russia")
### Por tratamiento y país
baseline.uk<-subset(dat.2, treatment_lab=="Baseline" & country=="UK")
baseline.cl<-subset(dat.2, treatment_lab=="Baseline" & country=="Chile")
baseline.ru<-subset(dat.2, treatment_lab=="Baseline"  & country=="Russia")
status.uk<-subset(dat.2, treatment_lab=="Status" & country=="UK")
status.cl<-subset(dat.2, treatment_lab=="Status" & country=="Chile")
status.ru<-subset(dat.2, treatment_lab=="Status" & country=="Russia")
shock.uk<-subset(dat.2, treatment_lab=="Shock" & country=="UK")
shock.cl<-subset(dat.2, treatment_lab=="Shock" & country=="Chile")
shock.ru<-subset(dat.2, treatment_lab=="Shock" & country=="Russia")
nof.uk<-subset(dat.2, treatment_lab=="Non-fixed" & country=="UK")
nof.cl<-subset(dat.2, treatment_lab=="Non-fixed" & country=="Chile")
nof.ru<-subset(dat.2, treatment_lab=="Non-fixed" & country=="Russia")
#################################
### EStadísticas de resúmen
#################################
library(xtable)
###########################
### Sesiones Experimentales
###########################
# Total
N.Subjects <- length(unique(dat.2$subj_id))
N.Subjects
N.Session <-length(unique(dat.2$session))
N.Session
# por país
cdata <- ddply(dat.2, c("country"), summarise,
N.Subjects    = length(unique(subj_id)),
N.Session = length(unique(session))
)
xtable(cdata)
# tratamientos y número de sesiones
cdata <- ddply(dat.2, c("treatment_lab", "country"), summarise,
N.Gender    =  length(unique(subj_id)),
N.Session = length(unique(session))
#Mean.cheat = mean(cheat)
)
xtable(cdata)
################################
iv<-ivreg(percevaded ~ cost_comply + ncorrectret | ncorrectret + treatment_lab + auditrate, data= dat.2)
??ivreg()
library(ivreg)
library(AER)
iv<-ivreg(percevaded ~ cost_comply + ncorrectret | ncorrectret + treatment_lab + auditrate, data= dat.2)
summary(iv)
1  # reconoce 1 como un vector de un sólo elemento
1  #
1 + 1
1 + 1
"a"
a
valor1 <- 1 + 2
valor1	# Al imprimir el objeto se puede ser su valor
valor2 <- "blue" # Pueden ser numéricos, characteres o factores
valor2
sqrt(2 ^ 3)
sqrt(valor1)
valor1<-5
sqrt(valor1)
sqrt(valor2)
help(sqrt)
vec1 <- c(4.6, 4.8, 5.2, 6.3, 6.8, 7.1, 7.2, 7.4, 7.5, 8.6)
vec2 <- c('UT', 'IA', 'MN', 'AL', 'WI', 'MN', 'OH', 'IA', 'NY', 'IA')
?c()  # combina valores y los transforma en un vector
?c()  # combina valores y los transforma en un vector
vec3<-c(1, "a", 2, 33, "z") # combinar número y valores hacer que el vector sea considerado un conjunto de characteres
vec3
vec1[7]
vec2[1:3]
vec3[c(1, 4)]
vec4<-vec2[1:3]
vec3<-vec4 # Se pueden reemplazar valores en forma simple ¡¡¡Tengan cuidado!!!
vec3
length(vec1)
class(vec1)
class(vec1)<-"character"  ### Se puede transformar de numérico a character
mean(vec1)
class(vec1)<-"numeric"  ### y de vuelta
mean(vec1)
var(vec1)
sd(vec1)
sum(vec1)
max(vec1)
sqrt(valor1)
max(vec1)/min(vec1)
summary(vec1)
rm(vec4)
rm(list=ls())
# ------------------------------------------------------
# -------- Intro opcional 1:   Intro a R ---------------
# ------------------------------------------------------
# -----------------------------------------
# -- I. RStudio y su interfaz de usuario --
# -----------------------------------------
# Elementos de pantalla de RStudio:
# 1) Script
# 2) Global Environment
# 3) Impresión de resultados
# 4) Gráficos, packages, ayuda
# ----------------------
# -- II. R Basics --
# ----------------------
# Lenguaje: Comentarios con "#"
#--------------------------
1  # reconoce 1 como un vector de un sólo elemento
1 + 1
"a"
a
# Objetos : <numbre objecto> <- <información contenida en el Objeto>
#--------------------------
valor1 <- 1 + 2
valor1	# Al imprimir el objeto se puede ser su valor
valor2 <- "blue" # Pueden ser numéricos, characteres o factores
valor2
# Ejemplo básico de Funciones
#--------------------------
sqrt(2 ^ 3)
sqrt(valor1)
sqrt(valor2)
help(sqrt)
?help
# Tipos de Datos
#--------------------------
# 1. Vectores
vec1 <- c(4.6, 4.8, 5.2, 6.3, 6.8, 7.1, 7.2, 7.4, 7.5, 8.6)
vec2 <- c('UT', 'IA', 'MN', 'AL', 'WI', 'MN', 'OH', 'IA', 'NY', 'IA')
?c()  # combina valores y los transforma en un vector
vec3<-c(1, "a", 2, 33, "z") # combinar número y valores hacer que el vector sea considerado un conjunto de characteres
vec3
# Elementos de los vectores: <vector>[<índices>]
vec1[7]
vec2[1:3]
vec3[c(1, 4)]
#subconjunto
vec4<-vec2[1:3]
vec3<-vec4 # Se pueden reemplazar valores en forma simple ¡¡¡Tengan cuidado!!!
vec3
# Largo de un Vector
length(vec1)
length(vec3)
# Clase de vectores
class(vec1)
class(vec3)
class(vec1)<-"character"  ### Se puede transformar de numérico a character
class(vec1)<-"numeric"  ### y de vuelta
class(vec3)<-"numeric" ### Los characteres no-numericos no se pueden transformar a numéricos
vec3
vec3<-c(1, "a", 2, 33, "z") # combinar número y valores hacer que el vector sea considerado un conjunto de characteres
class(vec3)
vec3<-as.numeric(vec3) ## transformar a numérico
vec3
vec5<-as.numeric(vec2) ## Produce un error
vec5<-as.numeric(as.factor(vec2)) ## Pero los factores se pueden transformar en categorías numéricas
vec5
# Funciones de un vector numérico
#--------------------------
mean(vec1)
var(vec1)
sd(vec1)
sum(vec1)
max(vec1)
# Resumen de vectores
#--------------------------
summary(vec1)
summary(vec2)
summary(as.factor(vec2)) 	# Si un vector es un factor se pueden obtener frecuencias
table(vec2) # equivalente
vec1
vec1+1
setwd("~/GitHub/Winter-School")
rm(list=ls())
health <- read.table("Dataset.csv", sep = ";", header = TRUE)
setwd("~/GitHub/Winter-School")
setwd("~/GitHub/Winter-School/Material R")
health <- read.table("Dataset.csv", sep = ";", header = TRUE)
View(health)
View(health)
names(health)
names(health)[5:10] <- c("food", "smoke",
"exercise", "happy",
"alcohol", "doctor")
names(health)
