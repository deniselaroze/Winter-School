y<-c(y0, y1)
col<-c(rep("Y(0)", N), rep("Y(1)", N))
u<-rep(1:500, 2)
df<-as.data.frame(cbind(y,u, col))
ggplot(df, aes(x = u, y = y)) + geom_point(aes(colour = factor(col)))
ylab("Y(0) & Y(1)") + xlab("u")
ggplot() +
geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "red" , "black" ))
ggplot() +
geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "red" , "black" ))
ggplot() + geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "red" , "black" ))
ggplot() + geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "red" , "black" ))
View(df)
View(df)
N<-500
y0<-rnorm(N, 5, 2)
y1<-y0+rnorm(N, 1, 0.5)
y<-c(y0, y1)
col<-c(rep(0, N), rep(1, N))
u<-rep(1:500, 2)
df<-as.data.frame(cbind(y,u, col))
ggplot() + geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "red" , "black" ))
ggplot() + geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "red" , "black" )) + guides(color=FALSE)
N<-500
y0<-rnorm(N, 5, 2)
y1<-y0+rnorm(N, 3, 0.5)
y<-c(y0, y1)
col<-c(rep(0, N), rep(1, N))
u<-rep(1:500, 2)
df<-as.data.frame(cbind(y,u, col))
ggplot() + geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "red" , "black" )) + guides(color=FALSE)
ggplot() + geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "black", "red" )) + guides(color=FALSE)
N<-500
y0<-rnorm(N, 5, 2)
y1<-y0+rnorm(N, 5, 0.5)
y<-c(y0, y1)
col<-c(rep(0, N), rep(1, N))
u<-rep(1:500, 2)
df<-as.data.frame(cbind(y,u, col))
ggplot() + geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "black", "red" )) + guides(color=FALSE)
ggplot() + geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "black", "red" )) + guides(color=FALSE) +
main("Units")
N<-100
y0<-rnorm(N, 5, 2)
y1<-y0+rnorm(N, 5, 0.5)
y<-c(y0, y1)
col<-c(rep(0, N), rep(1, N))
u<-rep(1:N, 2)
df<-as.data.frame(cbind(y,u, col))
ggplot() + geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "black", "red" )) + guides(color=FALSE) +
ggtitle("Y(1) & Y(0) for all units")
N<-200
y0<-rnorm(N, 5, 2)
y1<-y0+rnorm(N, 5, 0.5)
y<-c(y0, y1)
col<-c(rep(0, N), rep(1, N))
u<-rep(1:N, 2)
df<-as.data.frame(cbind(y,u, col))
ggplot() + geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "black", "red" )) + guides(color=FALSE) +
ggtitle("Y(1) & Y(0) for all units")
p1<-ggplot() + geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "black", "red" )) + guides(color=FALSE) +
ggtitle("Y(1) & Y(0) for all units")
p1
p2<-p1+geom_hline(0, data = df)
p2<-p1+geom_hline(yintercept = 0) + geom_hline(yintercept = mean(y1))
p2<-p1+geom_hline(yintercept = 0) + geom_hline(yintercept = mean(y1))
p2
N<-200
y0<-rnorm(N, 0, 1)
y1<-y0+rnorm(N, 5, 0.5)
y<-c(y0, y1)
col<-c(rep(0, N), rep(1, N))
u<-rep(1:N, 2)
df<-as.data.frame(cbind(y,u, col))
p1<-ggplot() + geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "black", "red" )) + guides(color=FALSE) +
ggtitle("Y(1) & Y(0) for all units")
p1
p2<-p1+geom_hline(yintercept = 0) + geom_hline(yintercept = mean(y1))
p2
N<-200
y0<-rnorm(N, 0, 1)
y1<-y0+rnorm(N, 3, 0.5)
y<-c(y0, y1)
col<-c(rep(0, N), rep(1, N))
u<-rep(1:N, 2)
df<-as.data.frame(cbind(y,u, col))
p1<-ggplot() + geom_point(data=df, mapping=aes(x=u, y=y, col=factor(col)), size=1)+
ylab("Y(0) & Y(1)") + xlab("u") +
scale_color_manual("", values=c( "black", "red" )) + guides(color=FALSE) +
ggtitle("Y(1) & Y(0) for all units")
p1
p2<-p1+geom_hline(yintercept = 0) + geom_hline(yintercept = mean(y1))
p2
1  # reconoce 1 como un vector de un sólo elemento
1 + 1
"a"
valor1 <- 1 + 2
valor1	# Al imprimir el objeto se puede ser su valor
valor2 <- "blue" # Pueden ser numéricos, characteres o factores
valor2
valor4<-c(1, "a", 2, 3, "z")
valor4
sqrt(2 ^ 3)
sqrt(value1)
valor1 <- 1 + 2
valor1	# Al imprimir el objeto se puede ser su valor
valor2 <- "blue" # Pueden ser numéricos, characteres o factores
valor2
valor3<-c(1, 3, 5, 6, 52, 66)
valor3
valor4<-c(1, "a", 2, 3, "z") # combinar número y valores hacer que el vector sea considerado un conjunto de characteres
valor4
sqrt(2 ^ 3)
sqrt(valor1)
sqrt(valor2)
help(sqrt)
?help
# 1. Vectores
vec1 <- c(4.6, 4.8, 5.2, 6.3, 6.8, 7.1, 7.2, 7.4, 7.5, 8.6)
vec2 <- c('UT', 'IA', 'MN', 'AL', 'WI', 'MN', 'OH', 'IA', 'NY', 'IA')
?c  # Combines values into a vector or a list
vec3<-c(1, "a", 2, 3, "z") # combinar número y valores hacer que el vector sea considerado un conjunto de characteres
vec3
vec1[7]
vec2[1:3]
vec3[c(1, 4)]
vec1[7]
vec2[1:3]
vec3[c(1, 4)]
#subconjunto
vec4<-vec2[1:3]
vec4
vec3<-vec4
vec3
length(vec1)
length(vec2)
length(vec3)
class(vec1)
class(vec3)
class(vec1)<-"numeric"
class(vec1)<-"character"
class(vec1)
class(vec1)
vec1 <- c(4.6, 4.8, 5.2, 6.3, 6.8, 7.1, 7.2, 7.4, 7.5, 8.6)
class(vec1)
vec4<-vec2[1:3]
vec3<-vec4 # Se pueden reemplazar valores en forma simple ¡¡¡Tengan cuidado!!!
vec3
class(vec3)<-"numeric"
vec3
vec3
vec3<-c(1, "a", 2, 33, "z") # combinar número y valores hacer que el vector sea considerado un conjunto de characteres
class(vec3)
vec3<-as.numeric(vec3)
vec3
vec2 <- c('UT', 'IA', 'MN', 'AL', 'WI', 'MN', 'OH', 'IA', 'NY', 'IA')
vec5<-as.numeric(vec2)
vec5
vec2 <- c('UT', 'IA', 'MN', 'AL', 'WI', 'MN', 'OH', 'IA', 'NY', 'IA')
vec5<-as.numeric(as.factor(vec2))
vec5
vec5<-as.numeric(vec2) ## Produce un error
vec5<-as.numeric(as.factor(vec2)) ## Pero los factores se pueden transformar en categorías numéricas
vec5
mean(vec1)
var(vec1)
sum(vec1)
max(vec1)
sd(vec1)
summary(vec1)
summary(vec2)
as.character(vec1)
as.factor(vec1)
vec1+1
summary(as.factor(vec2)) 	# If you classify obj2 as a factor variable, you can obtain frequencies
vec1 <- c(4.6, 4.8, 5.2, 6.3, 6.8, 7.1, 7.2, 7.4, 7.5, 8.6)
table(vec2)
summary(vec2)
summary(as.factor(vec2)) 	# Si un vector es un factor se pueden obtener frecuencias
vec1+1
vec1*5
rep(1, times = 10)
rep(vec1, times = 5)
round(vec1/3, 2)
vec3 <- c(vec1, vec2)
length(vec3)
vec3
table(vec3)
e1<-rep(1:10, 10)
e1
vec3 <- c(vec1, vec2)
length(vec3)
vec3
cbind(vec1, vec3)
m1 <- cbind(vec1, vec2)  # prueben cbind(vec1, vec3)
m1
class(m1)  # All columns in a matrix must be the same mode(numeric/character...),
dim(m1)
m1[, 1]
m1[, 1]
m1[2, ]
m1[2, 1]
View(m1)
df1 <- data.frame(vec1, vec2)
class(df1)
View(df1)
str(df1)
?str()
names(df1)
df1$vec2[1] # Objeto 1 de la variable vec2
df1$vec2[1:5]
idnum <- seq(from = 1, to = 10)
e2 <- data.frame(idnum, df1)
View(e2)
e2<-df1
e2$idnum<-idnum
View(e2)
l1 <- list(idnum, df1, 2)
l1
l1[[1]]
l1[[2]]
class(l1[[1]])
l1[[1]]
l1[1]
class(l1[1])
vec4 <- c(4.6, 4.8, 5.2, 6.3, 6.8, 7.1, 7.2, 7.4, 7.5, 8.6, NA)
sum(vec4)
is.na(vec4)
is.na(vec4)
getwd()
dir()
getwd()  # Nos dice el directorio actual
setwd("C:/Users/André Laroze/Documents/GitHub/Winter-School")
getwd()
dir()
health <- read.csv("Dataset.csv")
View(health)
health <- read.table("Dataset.csv", sep = ",", header = TRUE)
View(health)
class(health)
health <- read.csv("Dataset.csv")
View(health)
health <- read.table("Dataset.csv", sep = ";", header = TRUE)
read_table('Dataset.txt')
library()
search()
library(foreign,readstata13)
dfs12<-read.dta(data_stata12.dta)
dfs14<-readstata13(data_stata14.dta)
library(foreign,readstata13)
dfs12<-read.dta(data_stata12.dta)
dfs12<-read.dta("data_stata12.dta")
dfs14<-readstata13("data_stata14.dta")
library(readstata13)
dfs14<-readstata13("data_stata14.dta")
dfs14<-read.dta13("data_stata14.dta")
read_table('Dataset.txt')
read_delim('Dataset.txt', delim = '\t')
library(foreign,readstata13,readr)
read_table('Dataset.txt') # when your data are separated by one or more spaces
read_delim('Dataset.txt', delim = '\t')
??read.delim
read.table('Dataset.txt') # when your data are separated by one or more spaces
dft<-read.delim('Dataset.txt', delim = '\t')
read_csv('Dataset.csv')
save.image("~/GitHub/Winter-School/rdata.RData")
rm(list=ls())
load(rdata)
load(rdata.Rdata)
load("rdata.Rdata")
health <- read.table("Dataset.csv", sep = ";", header = TRUE)
setwd("~/GitHub/Winter-School")
setwd("~/GitHub/Winter-School")
rm(list=ls())
health <- read.table("Dataset.csv", sep = ";", header = TRUE)
View(health)
names(health)
names(health)[5:10] <- c("food", "smoke",
"exercise", "happy",
"alcohol", "doctor")
names(health)
health$age
which(health$age == -1)
health$age[which(health$age == -1 )] <- NA
is.na(health$age)
table(is.na(health$age))
mean(health$age)
mean(health$age, na.rm = TRUE)
health$health_sum <- rowSums(health[,c("food", "smoke",
"exercise", "happy",
"alcohol", "doctor")])
View(health)
apply(health[, 5:10], 1, sum)
vec1 <- c(4.6, 4.8, 5.2, 6.3, 6.8, 7.1, 7.2, 7.4, 7.5, 8.6)
vec2 <- c('UT', 'IA', 'MN', 'AL', 'WI', 'MN', 'OH', 'IA', 'NY', 'IA')
idnum <- seq(from = 1, to = 10)
e2 <- data.frame(idnum, df1)
names(e2)[2:3] <- c('rate', 'state')
df1<-cbind(vec1, vec2)
e2 <- data.frame(idnum, df1)
View(df1)
summary(health$age)
summary(health$age)
health$age_cat[health$age <= 32.5] <-"Grupo 1"
health$age_cat[health$age > 32.5 & health$age <= 50] <- "Grupo 2"
health$age_cat[health$age > 50] <-"Grupo 3"
View(health)
health[1:3, c("id", "gender", "smoke")]
subset(health, age_cat=="Grupo 1")
health$age
which(health$age > 40)
which(health$age > 40 & health$age < 50)
which(health$age < 25 | health$age > 50)
sub1 <- health[which(health$age > 40), c("age","smoke")]
View(sub1)
sub2 <- subset(health, age > 40, select = c("age","smoke"))
View(sub1)
View(sub2)
sub1 - sub2
e4 <- subset(e2, rate > 5 & rate < 7)
names(e2)[2:3] <- c('rate', 'state')
e4 <- subset(e2, rate > 5 & rate < 7)
View(e2)
e4 <- subset(e2, rate > 5 & rate < 7)
class(e2$rate)<-"numeric"
e4 <- subset(e2, rate > 5 & rate < 7)
View(e4)
vec1 <- c(4.6, 4.8, 5.2, 6.3, 6.8, 7.1, 7.2, 7.4, 7.5, 8.6)
vec2 <- c('UT', 'IA', 'MN', 'AL', 'WI', 'MN', 'OH', 'IA', 'NY', 'IA')
summary(vec1)
summary(vec2)
summary(as.factor(vec2))
vec1 <- c(4.6, 4.8, 5.2, 6.3, 6.8, 7.1, 7.2, 7.4, 7.5, 8.6)
vec2 <- c('UT', 'IA', 'MN', 'AL', 'WI', 'MN', 'OH', 'IA', 'NY', 'IA')
idnum <- seq(from = 1, to = 10)
df1<-cbind(vec1, vec2)
e2 <- data.frame(idnum, df1)
names(e2)[names(e2) %in% c("vec1","vec2")]<-c('rate', 'state')
e4 <- subset(e2, rate > 5 & rate < 7)
class(e2$rate)<-"numeric"
e4 <- subset(e2, rate > 5 & rate < 7)
View(e2)
vec1 <- c(4.6, 4.8, 5.2, 6.3, 6.8, 7.1, 7.2, 7.4, 7.5, 8.6)
summary(vec1)
vec1 <- c(4.6, 4.8, 5.2, 6.3, 6.8, 7.1, 7.2, 7.4, 7.5, 8.6)
summary(vec1)
vec1 <- c(4.6, 4.8, 5.2, 6.3, 6.8, 7.1, 7.2, 7.4, 7.5, 8.6)
vec2 <- c('UT', 'IA', 'MN', 'AL', 'WI', 'MN', 'OH', 'IA', 'NY', 'IA')
idnum <- seq(from = 1, to = 10)
df1<-cbind(vec1, vec2)
e2 <- data.frame(idnum, df1)
summary(df1$vec1)
vec1 <- c(4.6, 4.8, 5.2, 6.3, 6.8, 7.1, 7.2, 7.4, 7.5, 8.6)
vec2 <- c('UT', 'IA', 'MN', 'AL', 'WI', 'MN', 'OH', 'IA', 'NY', 'IA')
idnum <- seq(from = 1, to = 10)
df1<-as.data.frame(cbind(vec1, vec2))
e2 <- data.frame(idnum, df1)
summary(df1$vec1)
names(e2)[2:3] <- c('rate', 'state')
e2$e3 <- sqrt(e2$rate) / e2$idnum
vec1 <- c(4.6, 4.8, 5.2, 6.3, 6.8, 7.1, 7.2, 7.4, 7.5, 8.6)
vec2 <- c('UT', 'IA', 'MN', 'AL', 'WI', 'MN', 'OH', 'IA', 'NY', 'IA')
idnum <- seq(from = 1, to = 10)
df1<-as.data.frame(vec1, vec2)
e2 <- data.frame(idnum, df1)
names(e2)[2:3] <- c('rate', 'state')
e2$e3 <- sqrt(e2$rate) / e2$idnum
View(df1)
vec1 <- c(4.6, 4.8, 5.2, 6.3, 6.8, 7.1, 7.2, 7.4, 7.5, 8.6)
vec2 <- c('UT', 'IA', 'MN', 'AL', 'WI', 'MN', 'OH', 'IA', 'NY', 'IA')
idnum <- seq(from = 1, to = 10)
df1<-as.data.frame(vec1, vec2)
summary(vec1)
df1<-data.frame(cbind(vec1, vec2))
View(df1)
df1$vec1
df1<-cbind(vec1, vec2)
e2 <- data.frame(idnum, df1)
View(e2)
e2$vec1
names(e2)[names(e2) %in% c("vec1","vec2")]<-c('rate', 'state')
#names(e2)[2:3] <- c('rate', 'state')
class(e2$rate)<-"numeric"
e2$e3 <- sqrt(e2$rate) / e2$idnum
View(e2)
e4 <- subset(e2, rate > 5 & rate < 7)
View(e4)
summary(health)
mean(health$age, na.rm = TRUE)
median(health$age, na.rm = TRUE)
sd(health$age, na.rm = TRUE)
quantile(health$age, na.rm = TRUE)
table(health$gender)
prop.table(table(health$gender))
table(health$gender, health$age_cat)
margin.table(table(health$gender, health$age_cat), 1)
margin.table(table(health$gender, health$age_cat), 2)
table(health$gender)
prop.table(margin.table(table(health$gender, health$age_cat), 1))
prop.table(margin.table(table(health$gender, health$age_cat), 2))
margin.table(table(health$gender, health$age_cat), 1)
prop.table(table(health$gender, health$age_cat), 2)
cor(health[5:9])
cor(health[c("food", "smoke", "exercise", "happy", "alcohol")])
plot(health[5:9])
plot(health[5:9])
cor.test(health[5:9])
cor.test(health$food, health$smoke)
plot(health$food, health$smoke)
rcorr(health$food, health$smoke)
?rcorr
??rcorr
library(lmtest)
rcorr(health$food, health$smoke)
rcorr(health$food, health$smoke)
scatterplot(health$food, health$smoke)
library(car)
scatterplot(health$food, health$smoke)
scatterplot(health[5:9])
summary(e2$rate)
mean(e2$rate)
max(e2$rate)
quantile(e2$rate)
x <- 9
if (x > 10) {
print ("Mayor que 10")
} else if (x == 10) {
print ("Igual a 10")
} else if (x < 10 & x >= 0) {
print ("Entre 0 y 10")
} else {
print ("Menos que 0")
}
x <- seq(1:4)
ifelse(x < 4, "Menos que 4", "mayor o igua a 4")
View(health)
health$health_sum
health$condición<- ifelse(health$health_sum = mean(health$health_sum)  , "Promedio",
ifelse(health$health_sum < mean(health$health_sum), "Peor", "Mejor"))
health$condición<- ifelse(health$health_sum == mean(health$health_sum)  , "Promedio",
ifelse(health$health_sum < mean(health$health_sum), "Peor", "Mejor"))
View(health)
health$condición<- ifelse(health$health_sum == median(health$health_sum)  , "Promedio",
ifelse(health$health_sum < mean(health$health_sum), "Peor", "Mejor"))
View(health)
library(MASS)
data(UScereal)
head(UScereal)
View(e2)
View(e2)
unique(e2$state)
e2$ifvar<-ifelse(e2$state=="IA", 1 ,
ifelse(e2$rate<5 & !e2$state=="IA",2 ,
ifelse(e2$rat>5 & !e2$state=="IA", 3,
ifelse(e2$idnum==10, 4, 5
))))
View(e2)
e2$ifvar<-ifelse(e2$state=="IA", 1 ,
ifelse(e2$rate<5 & !e2$state=="IA",2 ,
ifelse(e2$rat>5 & !e2$state=="IA", 3,
ifelse(e2$idnum==9, 4, 5
))))
View(e2)
e2$ifvar<-ifelse(e2$state=="IA", 1 ,
ifelse(e2$rate<5 & !e2$state=="IA",2 ,
ifelse(e2$rat>7 & !e2$state=="IA", 3,
ifelse(e2$idnum==6, 4, 5
))))
View(e2)
data1 <- data.frame(id = rep(1:5, 3), year = rep(2000:2002, each = 5),
group = sample(c("A", "B", "C"), 15, replace = TRUE))
data2 <- data.frame(id = rep(1:5, each = 4), year = rep(2000:2003, 5),
score = rnorm(20, 50, 15))
View(data1)
View(data2)
data_merge <- merge(data1, data2, by = c("id", "year"))
View(data_merge)
data_merge <- merge(data1, data2, by = c("id", "year"), all = TRUE)
data_merge
inner_merge <- inner_join(data1, data2, by = c("id", "year"))
library(dplyr)
inner_merge <- inner_join(data1, data2, by = c("id", "year"))
outer_merge <- full_join(data1, data2, by = c("id", "year"))
View(data_merge)
